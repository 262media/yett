{"version":3,"file":"script-blocker.min.js","sources":["../../src/index.js"],"sourcesContent":["// Variables //\nlet blacklistedPatterns = window.SCRIPT_BLOCKER_BLACKLIST\nconst TYPE_ATTRIBUTE = 'javascript/blocked'\n\n// Disables the checks\nlet disableBlocker = false\n// Backup of the blacklisted script nodes\nlet blackListedScripts = []\n// <head>\nconst head = document.getElementsByTagName('head')[0]\n\nconst needsToBeBlacklisted = (src, type) => (\n    !disableBlocker &&\n    (!type || type !== TYPE_ATTRIBUTE) &&\n    blacklistedPatterns.some(entry => entry.test(src))\n)\n\n/* 1st part - setup a mutation observer to track DOM insertion */\n\nconst observer = new MutationObserver(mutations => {\n    mutations.forEach(({ addedNodes }) => {\n        addedNodes.forEach(node => {\n            // For each added script tag\n            if(node.nodeType === 1 && node.tagName === 'SCRIPT') {\n                const src = node.src || ''\n                const type = node.type\n                // If the src is inside the blacklist\n                if(needsToBeBlacklisted(src, type)) {\n                    // We backup a copy of the script node\n                    blackListedScripts.push(node.cloneNode())\n\n                    // Blocks inline script execution in Safari & Chrome\n                    node.type = TYPE_ATTRIBUTE\n\n                    // Safari has this additional event which prevents scripts from loading\n                    node.addEventListener('beforeload', function (event) {\n                        // Prevent only marked scripts from loading\n                        if(node.getAttribute('type') === TYPE_ATTRIBUTE)\n                            event.preventDefault()\n                    })\n\n                    // Firefox has this additional event which prevents scripts from beeing executed\n                    node.addEventListener('beforescriptexecute', function (event) {\n                        // Prevent only marked scripts from executing\n                        if(node.getAttribute('type') === TYPE_ATTRIBUTE)\n                            event.preventDefault()\n                    })\n\n                    // Remove the node from the DOM\n                    node.parentElement.removeChild(node)\n                    // console.log('Blacklisted scripts', blackListedScripts)\n                }\n            }\n        })\n    })\n})\n\n// Starts the monitoring\nobserver.observe(document.documentElement, {\n    childList: true,\n    subtree: true\n})\n\n/* 2nd part - Monkey patch the createElement method to prevent dynamic scripts from executing */\n\nconst originalDescriptors = Object.getOwnPropertyDescriptors(HTMLScriptElement.prototype)\nconst createElementBackup = document.createElement\n\ndocument.createElement = function(...args) {\n    // If this is not a script tag, bypass\n    if(args[0].toLowerCase() !== 'script')\n        return createElementBackup.bind(document)(...args)\n\n    const scriptElt = createElementBackup.bind(document)(...args)\n\n    // Use the prototype descriptors\n    Object.defineProperties(scriptElt, {\n        'src': {\n            get() {\n                return originalDescriptors.src.get.call(this)\n            },\n            set(value) {\n                if(needsToBeBlacklisted(value, scriptElt.type)) {\n                    scriptElt.type = TYPE_ATTRIBUTE\n                }\n                return originalDescriptors.src.set.call(this, value)\n            }\n        },\n        'type': {\n            set(value) {\n                return originalDescriptors.type.set.call(\n                    this,\n                    needsToBeBlacklisted(scriptElt.src, scriptElt.type) ?\n                        TYPE_ATTRIBUTE :\n                        value\n                )\n            }\n        }\n    })\n\n    // Monkey patch the setAttribute function so that the setter is called instead\n    scriptElt.setAttribute = function(name, value) {\n        if(name === 'type' || name === 'src')\n            scriptElt[name] = value\n        else\n            HTMLScriptElement.protytope.setAttribute.call(scriptElt, name, value)\n    }\n\n    return scriptElt\n}\n\n/* Expose a function that resumes the blacklisted scripts execution. */\n\nconst unblockCheck = function(script) {\n    const src = script.getAttribute('src')\n    return (\n        disableBlocker ||\n        blacklistedPatterns.every(entry => !entry.test(src))\n    )\n}\n\nexport const unblock = function(...scriptUrls) {\n    if(disableBlocker)\n        return\n\n    observer.disconnect()\n\n    if(!scriptUrls || scriptUrls.length < 1) {\n        disableBlocker = true\n    } else {\n        blacklistedPatterns = blacklistedPatterns.filter(pattern =>\n            scriptUrls.every(url => !pattern.test(url))\n        )\n    }\n\n    // Parse existing script tags with a marked type\n    Array.from(document.getElementsByTagName('script')).forEach(script => {\n        if(script.getAttribute('type') === TYPE_ATTRIBUTE && unblockCheck(script)) {\n            script.type = 'application/javascript'\n            blackListedScripts.push(script)\n            script.parentElement.removeChild(script)\n        }\n    })\n    /* Blacklisted */\n    blackListedScripts = blackListedScripts.reduce((acc, script) => {\n        if(unblockCheck(script)) {\n            const scriptNode = document.createElement('script')\n            scriptNode.setAttribute('src', script.src)\n            head.appendChild(scriptNode)\n            return acc\n        }\n        return [...acc, script]\n    }, [])\n    blackListedScripts.forEach(script => {\n        if(unblockCheck(script)) {\n            const scriptNode = document.createElement('script')\n            scriptNode.setAttribute('src', script.src)\n            head.appendChild(scriptNode)\n        }\n    })\n}"],"names":["blacklistedPatterns","window","SCRIPT_BLOCKER_BLACKLIST","TYPE_ATTRIBUTE","disableBlocker","blackListedScripts","head","document","getElementsByTagName","needsToBeBlacklisted","src","type","some","entry","test","observer","MutationObserver","mutations","forEach","addedNodes","node","nodeType","tagName","push","cloneNode","addEventListener","event","getAttribute","preventDefault","parentElement","removeChild","observe","documentElement","childList","subtree","originalDescriptors","Object","getOwnPropertyDescriptors","HTMLScriptElement","prototype","createElementBackup","createElement","args","toLowerCase","bind","scriptElt","defineProperties","[object Object]","get","call","this","value","set","setAttribute","name","protytope","unblockCheck","script","every","scriptUrls","disconnect","length","filter","pattern","url","Array","from","reduce","acc","scriptNode","appendChild"],"mappings":"gMACA,IAAIA,EAAsBC,OAAOC,yBACjC,MAAMC,EAAiB,qBAGvB,IAAIC,GAAiB,EAEjBC,KAEJ,MAAMC,EAAOC,SAASC,qBAAqB,QAAQ,GAE7CC,EAAuB,CAACC,EAAKC,KAC9BP,KACCO,GAAQA,IAASR,IACnBH,EAAoBY,KAAKC,GAASA,EAAMC,KAAKJ,IAK3CK,EAAW,IAAIC,iBAAiBC,IAClCA,EAAUC,QAAQ,EAAGC,WAAAA,MACjBA,EAAWD,QAAQE,IAEf,GAAqB,IAAlBA,EAAKC,UAAmC,WAAjBD,EAAKE,QAAsB,CACjD,MAAMZ,EAAMU,EAAKV,KAAO,GAClBC,EAAOS,EAAKT,KAEfF,EAAqBC,EAAKC,KAEzBN,EAAmBkB,KAAKH,EAAKI,aAG7BJ,EAAKT,KAAOR,EAGZiB,EAAKK,iBAAiB,aAAc,SAAUC,GAEvCN,EAAKO,aAAa,UAAYxB,GAC7BuB,EAAME,mBAIdR,EAAKK,iBAAiB,sBAAuB,SAAUC,GAEhDN,EAAKO,aAAa,UAAYxB,GAC7BuB,EAAME,mBAIdR,EAAKS,cAAcC,YAAYV,WASnDL,EAASgB,QAAQxB,SAASyB,iBACtBC,WAAW,EACXC,SAAS,IAKb,MAAMC,EAAsBC,OAAOC,0BAA0BC,kBAAkBC,WACzEC,EAAsBjC,SAASkC,cAErClC,SAASkC,cAAgB,YAAYC,GAEjC,GAA6B,WAA1BA,EAAK,GAAGC,cACP,OAAOH,EAAoBI,KAAKrC,SAAzBiC,IAAsCE,GAEjD,MAAMG,EAAYL,EAAoBI,KAAKrC,SAAzBiC,IAAsCE,GAmCxD,OAhCAN,OAAOU,iBAAiBD,GACpBnC,KACIqC,MACI,OAAOZ,EAAoBzB,IAAIsC,IAAIC,KAAKC,OAE5CH,IAAII,GAIA,OAHG1C,EAAqB0C,EAAON,EAAUlC,QACrCkC,EAAUlC,KAAOR,GAEdgC,EAAoBzB,IAAI0C,IAAIH,KAAKC,KAAMC,KAGtDxC,MACIoC,IAAII,GACA,OAAOhB,EAAoBxB,KAAKyC,IAAIH,KAChCC,KACAzC,EAAqBoC,EAAUnC,IAAKmC,EAAUlC,MAC1CR,EACAgD,OAOpBN,EAAUQ,aAAe,SAASC,EAAMH,GACxB,SAATG,GAA4B,QAATA,EAClBT,EAAUS,GAAQH,EAElBb,kBAAkBiB,UAAUF,aAAaJ,KAAKJ,EAAWS,EAAMH,IAGhEN,GAKX,MAAMW,EAAe,SAASC,GAC1B,MAAM/C,EAAM+C,EAAO9B,aAAa,OAChC,OACIvB,GACAJ,EAAoB0D,MAAM7C,IAAUA,EAAMC,KAAKJ,eAIhC,YAAYiD,GAC5BvD,IAGHW,EAAS6C,cAELD,GAAcA,EAAWE,OAAS,EAClCzD,GAAiB,EAEjBJ,EAAsBA,EAAoB8D,OAAOC,GAC7CJ,EAAWD,MAAMM,IAAQD,EAAQjD,KAAKkD,KAK9CC,MAAMC,KAAK3D,SAASC,qBAAqB,WAAWU,QAAQuC,IACrDA,EAAO9B,aAAa,UAAYxB,GAAkBqD,EAAaC,KAC9DA,EAAO9C,KAAO,yBACdN,EAAmBkB,KAAKkC,GACxBA,EAAO5B,cAAcC,YAAY2B,OAIzCpD,EAAqBA,EAAmB8D,OAAO,CAACC,EAAKX,KACjD,GAAGD,EAAaC,GAAS,CACrB,MAAMY,EAAa9D,SAASkC,cAAc,UAG1C,OAFA4B,EAAWhB,aAAa,MAAOI,EAAO/C,KACtCJ,EAAKgE,YAAYD,GACVD,EAEX,UAAWA,EAAKX,SAEDvC,QAAQuC,IACvB,GAAGD,EAAaC,GAAS,CACrB,MAAMY,EAAa9D,SAASkC,cAAc,UAC1C4B,EAAWhB,aAAa,MAAOI,EAAO/C,KACtCJ,EAAKgE,YAAYD"}